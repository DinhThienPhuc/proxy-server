version: '3.8'

# ps: proxy-server
services:
  ps_client:
    image: ps_client
    container_name: ps_client
    stdin_open: true
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '80:80'
    restart: unless-stopped
    networks:
      - ps_network

  ps_server:
    image: ps_server
    container_name: ps_server
    stdin_open: true
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '8000:8000'
    restart: unless-stopped
    volumes:
      - '/app/node_modules'
      - './:/app'
    networks:
      - ps_network

  ps_server_html:
    image: ps_server_html
    container_name: ps_server_html
    stdin_open: true
    build:
      context: ./server-html
      dockerfile: Dockerfile
    ports:
      - '8001:8001'
    restart: unless-stopped
    volumes:
      - '/app/node_modules'
      - './:/app'
    networks:
      - ps_network

  ps_server_image:
    image: ps_server_image
    container_name: ps_server_image
    stdin_open: true
    build:
      context: ./server-image
      dockerfile: Dockerfile
    ports:
      - '8002:8002'
    restart: unless-stopped
    volumes:
      - '/app/node_modules'
      - './:/app'
    networks:
      - ps_network

  ps_nginx:
    image: ps_nginx
    container_name: ps_nginx
    stdin_open: true
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '7000:7000'
    restart: unless-stopped
    depends_on:
      - ps_server
    networks:
      - ps_network

  ps_nginx_html:
    image: ps_nginx_html
    container_name: ps_nginx_html
    stdin_open: true
    build:
      context: ./nginx-html
      dockerfile: Dockerfile
    ports:
      - '7001:7001'
    restart: unless-stopped
    depends_on:
      - ps_server_html
    networks:
      - ps_network

  ps_nginx_image:
    image: ps_nginx_image
    container_name: ps_nginx_image
    stdin_open: true
    build:
      context: ./nginx-image
      dockerfile: Dockerfile
    ports:
      - '7002:7002'
    restart: unless-stopped
    depends_on:
      - ps_server_image
    networks:
      - ps_network

  ps_nginx_filter:
    image: ps_nginx_filter
    container_name: ps_nginx_filter
    stdin_open: true
    build:
      context: ./nginx-filter
      dockerfile: Dockerfile
    ports:
      - '7100:7100'
    restart: unless-stopped
    depends_on:
      - ps_nginx_html
      - ps_nginx_image
    networks:
      - ps_network

  ps_mysql:
    image: ps_mysql
    container_name: ps_mysql
    build:
      context: ./mysql
      args:
        - MYSQL_DATABASE=quizz
        - MYSQL_USER=quizz
        - MYSQL_PASSWORD=quizz
        - MYSQL_ROOT_PASSWORD=quizz
    volumes:
      - mysql:/var/lib/mysql
    ports:
      - '3306:3306'
    networks:
      - ps_network

volumes:
  mysql:

networks:
  ps_network:
    driver: bridge
